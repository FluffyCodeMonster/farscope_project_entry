<?xml version="1.0" ?>

<!-- simulate example robot with example controller in the challenge scenario -->

<launch>

  <!-- launch Gazebo in the Group Challenge world -->
  <!-- use `roslaunch farscope_example_robot_simulate use_gui:=false` to turn off Gazebo GUI -->
  <!-- use `roslaunch farscope_example_robot_simulate scenario:=<file>` to change scenario file -->
  <!-- e.g. `scenario:=$(find farscope_group_project)/scenarios/all_no_random.yaml` all trophies, perfectly placed -->
  <arg name="scenario_file" default="$(find farscope_project_entry)/scenarios/all_duplicates.yaml" />
  <arg name="use_gui" default="true" />
  <include file="$(find farscope_project_entry)/launch/simulator_only.launch">
    <arg name="use_gui" value="$(arg use_gui)" />
    <arg name="scenario_file" value="$(arg scenario_file)" />
  </include>

  <!-- you shouldn't need to edit the stuff *above* here in this file -->
  <!-- as that just runs the simulator and passes your choice of scenario and GUI setting -->

  <!-- edit *below* here to add your nodes and parameters for robot control -->

  <!-- run example controller -->
  <node name="robot_controller" pkg="farscope_project_entry" type="our_controller.py" />
  <node name="robot_base_controller" pkg="farscope_project_entry" type="base_controller.py" />
  <node name="map_source" pkg="farscope_project_entry" type="map_source.py" clear_params="true">
    <param name="trimmed_hector_map" value="$(find farscope_project_entry)/data/1map_grid_data_only" />
  </node>
</launch>
